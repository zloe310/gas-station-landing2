"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"
import { Phone, Send } from "lucide-react"

export function ConsultationForm() {
  const [name, setName] = useState("")
  const [email, setEmail] = useState("")
  const [contactMethod, setContactMethod] = useState("phone")
  const [phone, setPhone] = useState("")
  const [consent, setConsent] = useState(false)

  const formatPhoneNumber = (value: string) => {
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    const numbers = value.replace(/\D/g, '')
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 10 —Ü–∏—Ñ—Ä (–±–µ–∑ —É—á–µ—Ç–∞ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã)
    const limitedNumbers = numbers.slice(0, 10)
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä
    if (limitedNumbers.length === 0) return ""
    if (limitedNumbers.length <= 3) return `(${limitedNumbers}`
    if (limitedNumbers.length <= 6) return `(${limitedNumbers.slice(0, 3)}) ${limitedNumbers.slice(3)}`
    if (limitedNumbers.length <= 8) return `(${limitedNumbers.slice(0, 3)}) ${limitedNumbers.slice(3, 6)}-${limitedNumbers.slice(6)}`
    return `(${limitedNumbers.slice(0, 3)}) ${limitedNumbers.slice(3, 6)}-${limitedNumbers.slice(6, 8)}-${limitedNumbers.slice(8)}`
  }

  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const formattedValue = formatPhoneNumber(e.target.value)
    setPhone(formattedValue)
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    console.log({ name, email, contactMethod, phone })
  }

  return (
    <section className="py-16 lg:py-24">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <Card className="max-w-2xl mx-auto">
          <CardHeader className="text-center">
            <CardTitle className="text-3xl sm:text-4xl font-bold text-foreground">
              –ì–æ—Ç–æ–≤—ã –ø–æ–≤—ã—Å–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∞—à–µ–π –ê–ó–°?
            </CardTitle>
            <CardDescription className="text-lg mt-4">
              –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã.
            </CardDescription>
          </CardHeader>

          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-6">
                             {/* –ò–º—è */}
               <div className="space-y-2">
                 <Label htmlFor="name" className="text-base font-medium text-foreground">
                   –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?
                 </Label>
                 <Input
                   id="name"
                   type="text"
                   placeholder="–í–∞—à–µ –∏–º—è"
                   value={name}
                   onChange={(e) => setName(e.target.value)}
                   required
                   className="h-12 text-base mt-4"
                 />
               </div>

               {/* Email */}
               <div className="space-y-2">
                 <Label htmlFor="email" className="text-base font-medium text-foreground">
                   Email
                 </Label>
                 <Input
                   id="email"
                   type="email"
                   placeholder="your@email.com"
                   value={email}
                   onChange={(e) => setEmail(e.target.value)}
                   required
                   className="h-12 text-base mt-4"
                 />
               </div>

              {/* –°–ø–æ—Å–æ–± —Å–≤—è–∑–∏ */}
              <div className="space-y-3">
                <Label className="text-base font-medium text-foreground">
                  –£–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ (–¢–µ–ª–µ—Ñ–æ–Ω/Telegram/WhatsApp)
                </Label>
                <div className="flex justify-start gap-8 mt-4">
                  <img 
                    src="/LOGO SVG/phone.svg" 
                    alt="–¢–µ–ª–µ—Ñ–æ–Ω" 
                    onClick={() => setContactMethod("phone")}
                    className={`w-[52.8px] h-[52.8px] transition-all duration-200 cursor-pointer hover:scale-110 ${
                      contactMethod === "phone" 
                        ? "grayscale-0" 
                        : "grayscale hover:grayscale-0"
                    }`} 
                  />
                  
                  <img 
                    src="/LOGO SVG/telegram.svg" 
                    alt="Telegram" 
                    onClick={() => setContactMethod("telegram")}
                    className={`w-[52.8px] h-[52.8px] transition-all duration-200 cursor-pointer hover:scale-110 ${
                      contactMethod === "telegram" 
                        ? "grayscale-0" 
                        : "grayscale hover:grayscale-0"
                    }`} 
                  />
                  
                  <img 
                    src="/LOGO SVG/whatsapp.svg" 
                    alt="WhatsApp" 
                    onClick={() => setContactMethod("whatsapp")}
                    className={`w-[52.8px] h-[52.8px] transition-all duration-200 cursor-pointer hover:scale-110 ${
                      contactMethod === "whatsapp" 
                        ? "grayscale-0" 
                        : "grayscale hover:grayscale-0"
                    }`} 
                  />
                </div>
              </div>

              {/* –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö */}
              <div className="flex items-start gap-3">
                <input
                  id="consent"
                  type="checkbox"
                  checked={consent}
                  onChange={(e) => setConsent(e.target.checked)}
                  className="mt-1 h-5 w-5 cursor-pointer"
                />
                <label htmlFor="consent" className="text-sm text-foreground">
                  –Ø –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å
                  {' '}<a href="/privacy-policy" target="_blank" rel="noopener noreferrer" className="underline underline-offset-2 hover:no-underline">–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.
                </label>
              </div>

              {/* –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ */}
              <div className="space-y-2">
                <Label htmlFor="phone" className="text-base font-medium text-foreground">
                  –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                </Label>
                <div className="relative">
                  <div className="absolute left-3 top-1/2 -translate-y-1/2 flex items-center gap-2">
                    <span className="text-lg">üá∑üá∫</span>
                    <span className="text-sm text-muted-foreground">+7</span>
                  </div>
                  <Input
                    id="phone"
                    type="tel"
                    placeholder="(000) 000-00-00"
                    value={phone}
                    onChange={handlePhoneChange}
                    required
                    className="h-12 text-base pl-16"
                  />
                </div>
              </div>
            </form>
          </CardContent>

          <CardFooter className="flex flex-col space-y-4">
            <Button 
              onClick={handleSubmit}
              className="w-full h-14 text-lg font-semibold cursor-pointer"
              size="lg"
              disabled={!consent}
            >
              <Send className="w-5 h-5 mr-2" />
              –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
            </Button>
            <p className="text-xs text-muted-foreground text-center">
              –ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É, –≤—ã –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
            </p>
          </CardFooter>
        </Card>
      </div>
    </section>
  )
}
